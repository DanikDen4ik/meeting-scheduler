{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:5000'\n});\n\n// Получение встреч с сервера\nexport const fetchBookings = async () => {\n  try {\n    const response = await api.get('/bookings');\n    return response.data; // Возвращаем массив встреч\n  } catch (error) {\n    console.error('Ошибка загрузки встреч:', error);\n    throw error;\n  }\n};\n\n// Создание новой встречи\nexport const createBooking = async data => {\n  try {\n    const response = await api.post('/bookings', data);\n    return response.data;\n  } catch (error) {\n    console.error('Ошибка при создании встречи (API):', error);\n    throw error;\n  }\n};\n\n// Обновление встречи\napp.put('/bookings/:id', (req, res) => {\n  const bookingId = parseInt(req.params.id);\n  const index = bookings.findIndex(b => b.id === bookingId);\n  if (index !== -1) {\n    bookings[index] = {\n      ...bookings[index],\n      ...req.body\n    };\n    res.json(bookings[index]);\n  } else {\n    res.status(404).json({\n      message: 'Встреча не найдена'\n    });\n  }\n});\n\n// Удаление встречи\nexport const deleteBooking = async id => {\n  await api.delete(`/bookings/${id}`);\n};","map":{"version":3,"names":["axios","api","create","baseURL","fetchBookings","response","get","data","error","console","createBooking","post","app","put","req","res","bookingId","parseInt","params","id","index","bookings","findIndex","b","body","json","status","message","deleteBooking","delete"],"sources":["D:/Education/react/meeting-scheduler/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000',\r\n});\r\n\r\n// Получение встреч с сервера\r\nexport const fetchBookings = async () => {\r\n  try {\r\n    const response = await api.get('/bookings');\r\n    return response.data; // Возвращаем массив встреч\r\n  } catch (error) {\r\n    console.error('Ошибка загрузки встреч:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Создание новой встречи\r\nexport const createBooking = async (data) => {\r\n  try {\r\n    const response = await api.post('/bookings', data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Ошибка при создании встречи (API):', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Обновление встречи\r\napp.put('/bookings/:id', (req, res) => {\r\n  const bookingId = parseInt(req.params.id);\r\n  const index = bookings.findIndex((b) => b.id === bookingId);\r\n\r\n  if (index !== -1) {\r\n    bookings[index] = { ...bookings[index], ...req.body };\r\n    res.json(bookings[index]);\r\n  } else {\r\n    res.status(404).json({ message: 'Встреча не найдена' });\r\n  }\r\n});\r\n\r\n// Удаление встречи\r\nexport const deleteBooking = async (id) => {\r\n  await api.delete(`/bookings/${id}`);\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,WAAW,CAAC;IAC3C,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,aAAa,GAAG,MAAOH,IAAI,IAAK;EAC3C,IAAI;IACF,MAAMF,QAAQ,GAAG,MAAMJ,GAAG,CAACU,IAAI,CAAC,WAAW,EAAEJ,IAAI,CAAC;IAClD,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACAI,GAAG,CAACC,GAAG,CAAC,eAAe,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACrC,MAAMC,SAAS,GAAGC,QAAQ,CAACH,GAAG,CAACI,MAAM,CAACC,EAAE,CAAC;EACzC,MAAMC,KAAK,GAAGC,QAAQ,CAACC,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACJ,EAAE,KAAKH,SAAS,CAAC;EAE3D,IAAII,KAAK,KAAK,CAAC,CAAC,EAAE;IAChBC,QAAQ,CAACD,KAAK,CAAC,GAAG;MAAE,GAAGC,QAAQ,CAACD,KAAK,CAAC;MAAE,GAAGN,GAAG,CAACU;IAAK,CAAC;IACrDT,GAAG,CAACU,IAAI,CAACJ,QAAQ,CAACD,KAAK,CAAC,CAAC;EAC3B,CAAC,MAAM;IACLL,GAAG,CAACW,MAAM,CAAC,GAAG,CAAC,CAACD,IAAI,CAAC;MAAEE,OAAO,EAAE;IAAqB,CAAC,CAAC;EACzD;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOT,EAAE,IAAK;EACzC,MAAMlB,GAAG,CAAC4B,MAAM,CAAC,aAAaV,EAAE,EAAE,CAAC;AACrC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}