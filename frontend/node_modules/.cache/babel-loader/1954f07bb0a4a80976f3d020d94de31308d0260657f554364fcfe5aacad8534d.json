{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:5000'\n});\n\n// Получение встреч с сервера\nexport const fetchBookings = async () => {\n  try {\n    const response = await api.get('/bookings');\n    return response.data; // Возвращаем массив встреч\n  } catch (error) {\n    console.error('Ошибка загрузки встреч:', error);\n    throw error;\n  }\n};\n\n// Создание новой встречи с логированием ошибок\napp.post('/bookings', (req, res) => {\n  const {\n    title,\n    start,\n    end\n  } = req.body;\n\n  // Проверка на обязательные поля\n  if (!title || !start || !end) {\n    console.error('Ошибка: Заполнены не все поля.');\n    return res.status(400).json({\n      error: 'Все поля обязательны!'\n    });\n  }\n  try {\n    const newBooking = {\n      id: bookings.length + 1,\n      title,\n      start: new Date(start).toISOString(),\n      end: new Date(end).toISOString()\n    };\n    bookings.push(newBooking);\n    console.log('Создана новая встреча:', newBooking);\n    res.status(201).json(newBooking);\n  } catch (error) {\n    console.error('Ошибка при создании встречи:', error);\n    res.status(500).json({\n      error: 'Ошибка на сервере!'\n    });\n  }\n});\nexport const deleteBooking = async id => {\n  await api.delete(`/bookings/${id}`);\n};","map":{"version":3,"names":["axios","api","create","baseURL","fetchBookings","response","get","data","error","console","app","post","req","res","title","start","end","body","status","json","newBooking","id","bookings","length","Date","toISOString","push","log","deleteBooking","delete"],"sources":["D:/Education/react/meeting-scheduler/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000',\r\n});\r\n\r\n// Получение встреч с сервера\r\nexport const fetchBookings = async () => {\r\n  try {\r\n    const response = await api.get('/bookings');\r\n    return response.data; // Возвращаем массив встреч\r\n  } catch (error) {\r\n    console.error('Ошибка загрузки встреч:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Создание новой встречи с логированием ошибок\r\napp.post('/bookings', (req, res) => {\r\n  const { title, start, end } = req.body;\r\n\r\n  // Проверка на обязательные поля\r\n  if (!title || !start || !end) {\r\n    console.error('Ошибка: Заполнены не все поля.');\r\n    return res.status(400).json({ error: 'Все поля обязательны!' });\r\n  }\r\n\r\n  try {\r\n    const newBooking = {\r\n      id: bookings.length + 1,\r\n      title,\r\n      start: new Date(start).toISOString(),\r\n      end: new Date(end).toISOString(),\r\n    };\r\n\r\n    bookings.push(newBooking);\r\n    console.log('Создана новая встреча:', newBooking);\r\n    res.status(201).json(newBooking);\r\n  } catch (error) {\r\n    console.error('Ошибка при создании встречи:', error);\r\n    res.status(500).json({ error: 'Ошибка на сервере!' });\r\n  }\r\n});\r\n\r\nexport const deleteBooking = async (id) => {\r\n  await api.delete(`/bookings/${id}`);\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,WAAW,CAAC;IAC3C,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACAE,GAAG,CAACC,IAAI,CAAC,WAAW,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAClC,MAAM;IAAEC,KAAK;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAGJ,GAAG,CAACK,IAAI;;EAEtC;EACA,IAAI,CAACH,KAAK,IAAI,CAACC,KAAK,IAAI,CAACC,GAAG,EAAE;IAC5BP,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAC;IAC/C,OAAOK,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEX,KAAK,EAAE;IAAwB,CAAC,CAAC;EACjE;EAEA,IAAI;IACF,MAAMY,UAAU,GAAG;MACjBC,EAAE,EAAEC,QAAQ,CAACC,MAAM,GAAG,CAAC;MACvBT,KAAK;MACLC,KAAK,EAAE,IAAIS,IAAI,CAACT,KAAK,CAAC,CAACU,WAAW,CAAC,CAAC;MACpCT,GAAG,EAAE,IAAIQ,IAAI,CAACR,GAAG,CAAC,CAACS,WAAW,CAAC;IACjC,CAAC;IAEDH,QAAQ,CAACI,IAAI,CAACN,UAAU,CAAC;IACzBX,OAAO,CAACkB,GAAG,CAAC,wBAAwB,EAAEP,UAAU,CAAC;IACjDP,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACC,UAAU,CAAC;EAClC,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpDK,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEX,KAAK,EAAE;IAAqB,CAAC,CAAC;EACvD;AACF,CAAC,CAAC;AAEF,OAAO,MAAMoB,aAAa,GAAG,MAAOP,EAAE,IAAK;EACzC,MAAMpB,GAAG,CAAC4B,MAAM,CAAC,aAAaR,EAAE,EAAE,CAAC;AACrC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}