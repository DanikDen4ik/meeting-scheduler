{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nclass UserStore {\n  constructor() {\n    this.user = null;\n    this.error = null;\n    makeAutoObservable(this);\n\n    // Загружаем пользователя из localStorage при инициализации\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      this.user = JSON.parse(savedUser);\n    }\n  }\n  login(username, password) {\n    // Проверка логина и пароля\n    if (username === 'admin' && password === 'admin') {\n      this.user = {\n        username\n      };\n      this.error = null; // Сбрасываем ошибку\n      localStorage.setItem('user', JSON.stringify(this.user)); // Сохраняем пользователя\n    } else {\n      this.error = 'Неверное имя пользователя или пароль';\n    }\n  }\n  logout() {\n    this.user = null;\n    this.error = null; // Сбрасываем ошибку\n    localStorage.removeItem('user'); // Удаляем пользователя из localStorage\n  }\n}\nconst userStore = new UserStore();\nexport default userStore;","map":{"version":3,"names":["makeAutoObservable","UserStore","constructor","user","error","savedUser","localStorage","getItem","JSON","parse","login","username","password","setItem","stringify","logout","removeItem","userStore"],"sources":["D:/Education/react/meeting-scheduler/frontend/src/stores/UserStore.js"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\r\n\r\nclass UserStore {\r\n  user = null;\r\n  error = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    // Загружаем пользователя из localStorage при инициализации\r\n    const savedUser = localStorage.getItem('user');\r\n    if (savedUser) {\r\n      this.user = JSON.parse(savedUser);\r\n    }\r\n  }\r\n\r\n  login(username, password) {\r\n    // Проверка логина и пароля\r\n    if (username === 'admin' && password === 'admin') {\r\n      this.user = { username };\r\n      this.error = null; // Сбрасываем ошибку\r\n      localStorage.setItem('user', JSON.stringify(this.user)); // Сохраняем пользователя\r\n    } else {\r\n      this.error = 'Неверное имя пользователя или пароль';\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.user = null;\r\n    this.error = null; // Сбрасываем ошибку\r\n    localStorage.removeItem('user'); // Удаляем пользователя из localStorage\r\n  }\r\n}\r\n\r\nconst userStore = new UserStore();\r\nexport default userStore;\r\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AAEzC,MAAMC,SAAS,CAAC;EAIdC,WAAWA,CAAA,EAAG;IAAA,KAHdC,IAAI,GAAG,IAAI;IAAA,KACXC,KAAK,GAAG,IAAI;IAGVJ,kBAAkB,CAAC,IAAI,CAAC;;IAExB;IACA,MAAMK,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,IAAIF,SAAS,EAAE;MACb,IAAI,CAACF,IAAI,GAAGK,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC;IACnC;EACF;EAEAK,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IACxB;IACA,IAAID,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,OAAO,EAAE;MAChD,IAAI,CAACT,IAAI,GAAG;QAAEQ;MAAS,CAAC;MACxB,IAAI,CAACP,KAAK,GAAG,IAAI,CAAC,CAAC;MACnBE,YAAY,CAACO,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACM,SAAS,CAAC,IAAI,CAACX,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC,MAAM;MACL,IAAI,CAACC,KAAK,GAAG,sCAAsC;IACrD;EACF;EAEAW,MAAMA,CAAA,EAAG;IACP,IAAI,CAACZ,IAAI,GAAG,IAAI;IAChB,IAAI,CAACC,KAAK,GAAG,IAAI,CAAC,CAAC;IACnBE,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;EACnC;AACF;AAEA,MAAMC,SAAS,GAAG,IAAIhB,SAAS,CAAC,CAAC;AACjC,eAAegB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}